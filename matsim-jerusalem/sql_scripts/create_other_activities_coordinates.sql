--refactor:--get rid of trips_final - change to trips with updates--add all other codes into trips, to get rid of the need to join households--update set all 411,412,42--create bental_jtmt_code_conversion_long and insert purp_99 with all purposes for fake buildingsdrop table if exists bental_jtmt_code_conversion_long;create table if not exists bental_jtmt_code_conversion_long as (with first_table as(select usg_group,		   usg_code,		   unnest(array['purp_1', 'purp_2', 'purp_3', 'purp_4', 'purp_5', 'purp_6', 'purp_7', 'purp_8']) AS key1,		   unnest(array[purp_1, purp_2, purp_3, purp_4, purp_5, purp_6, purp_7, purp_8]) AS value1		 from bental_jtmt_code_conversion)select * from first_table where value1 is not null);insert into bental_jtmt_code_conversion_long select 100 as usg_group, 10000 as usg_code, 'purp_99' as key1, value1 from (select distinct value1 from bental_jtmt_code_conversion_long) q;ALTER TABLE bental_jtmt_code_conversion_longadd constraint bjccl_to_jmcc foreign key (value1) references jtmt_matsim_code_conversion (jtmt_code);--drop table if exists trips_final;--create table if not exists trips_final AS--with taz_activities as (--SELECT i.taz,--             b.value1,--             b.key1,--             st_x((st_dump(p.geometry)).geom),--             st_y((st_dump(p.geometry)).geom)--      FROM poi_bldg p--      LEFT JOIN bental_jtmt_code_conversion_long b--	ON p.usg_code = b.usg_code--      AND p.usg_group = b.usg_group--      JOIN inner_taz i --	ON st_intersects(i.geometry, p.geometry)--), almost_final as (--select * ,--          rank() OVER (PARTITION BY hhid,--                                    pnum,--                                    persontripnum--                       ORDER BY key1, random()) rank--from trips--left join taz_activities--on trips.origtaz = taz_activities.taz--   AND trips.origpurp = taz_activities.value1--)--select *--from almost_final--   where rank = 1--   ORDER BY hhid,--         pnum,--         persontripnum;         --CREATE INDEX idx_hhid_tf ON trips_final(hhid);	